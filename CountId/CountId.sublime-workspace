{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Par",
				"ParseXml"
			],
			[
				"brea",
				"break"
			],
			[
				"m_",
				"m_idbitset"
			],
			[
				"Id",
				"IdDiscriminator"
			],
			[
				"cle",
				"clear"
			],
			[
				"Ti",
				"TiXmlElement"
			],
			[
				"Next",
				"NextSiblingElement"
			],
			[
				"ele",
				"elements"
			],
			[
				"Firs",
				"FirstChild"
			],
			[
				"tin",
				"tinystr"
			],
			[
				"ti",
				"tinyxml"
			],
			[
				"tiny",
				"tinyxmlparser"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"ch",
				"chSep"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 500,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CountId.hpp",
			"settings":
			{
				"buffer_size": 944,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test.xml",
			"settings":
			{
				"buffer_size": 234,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CountIds",
			"settings":
			{
				"buffer_size": 946482,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ThirdLib/tinyxml/tinyxml.h",
			"settings":
			{
				"buffer_size": 64834,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CountId.cpp",
			"settings":
			{
				"buffer_size": 2415,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 1157,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\nwww.sourceforge.net/projects/tinyxml\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any\ndamages arising from the use of this software.\n\nPermission is granted to anyone to use this software for any\npurpose, including commercial applications, and to alter it and\nredistribute it freely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must\nnot claim that you wrote the original software. If you use this\nsoftware in a product, an acknowledgment in the product documentation\nwould be appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and\nmust not be misrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source\ndistribution.\n*/\n\n\n#ifndef TIXML_USE_STL\n\n#include \"tinystr.h\"\n\n// Error value for find primitive\nconst TiXmlString::size_type TiXmlString::npos = static_cast< TiXmlString::size_type >(-1);\n\n\n// Null rep.\nTiXmlString::Rep TiXmlString::nullrep_ = { 0, 0, { '\\0' } };\n\n\nvoid TiXmlString::reserve (size_type cap)\n{\n	if (cap > capacity())\n	{\n		TiXmlString tmp;\n		tmp.init(length(), cap);\n		memcpy(tmp.start(), data(), length());\n		swap(tmp);\n	}\n}\n\n\nTiXmlString& TiXmlString::assign(const char* str, size_type len)\n{\n	size_type cap = capacity();\n	if (len > cap || cap > 3*(len + 8))\n	{\n		TiXmlString tmp;\n		tmp.init(len);\n		memcpy(tmp.start(), str, len);\n		swap(tmp);\n	}\n	else\n	{\n		memmove(start(), str, len);\n		set_size(len);\n	}\n	return *this;\n}\n\n\nTiXmlString& TiXmlString::append(const char* str, size_type len)\n{\n	size_type newsize = length() + len;\n	if (newsize > capacity())\n	{\n		reserve (newsize + capacity());\n	}\n	memmove(finish(), str, len);\n	set_size(newsize);\n	return *this;\n}\n\n\nTiXmlString operator + (const TiXmlString & a, const TiXmlString & b)\n{\n	TiXmlString tmp;\n	tmp.reserve(a.length() + b.length());\n	tmp += a;\n	tmp += b;\n	return tmp;\n}\n\nTiXmlString operator + (const TiXmlString & a, const char* b)\n{\n	TiXmlString tmp;\n	TiXmlString::size_type b_len = static_cast<TiXmlString::size_type>( strlen(b) );\n	tmp.reserve(a.length() + b_len);\n	tmp += a;\n	tmp.append(b, b_len);\n	return tmp;\n}\n\nTiXmlString operator + (const char* a, const TiXmlString & b)\n{\n	TiXmlString tmp;\n	TiXmlString::size_type a_len = static_cast<TiXmlString::size_type>( strlen(a) );\n	tmp.reserve(a_len + b.length());\n	tmp.append(a, a_len);\n	tmp += b;\n	return tmp;\n}\n\n\n#endif	// TIXML_USE_STL\n",
			"file": "ThirdLib/tinyxml/tinystr.cpp",
			"file_size": 2507,
			"file_write_time": 130653772299395992,
			"settings":
			{
				"buffer_size": 2507,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 369.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/ken/Github/CountId",
		"/home/ken/Github/CountId/ThirdLib",
		"/home/ken/Github/CountId/ThirdLib/tinyxml"
	],
	"file_history":
	[
		"/home/ken/Github/CountId/ThirdLib/tinyxml/docs/classTiXmlElement.html",
		"/home/ken/Github/CountId/ThirdLib/tinyxml/docs/classTiXmlAttribute.html",
		"/home/ken/Github/CountId/ThirdLib/tinyxml/docs/classTiXmlElement-members.html",
		"/home/ken/Github/CountId/.tags_sorted_by_file",
		"/home/ken/Github/CountId/ThirdLib/tinyxml/docs/classTiXmlPrinter.html",
		"/home/ken/Github/CountId/Makefile",
		"/home/ken/GeekLofter/JavaAndroid/Brightness/src/com/example/brightness/MainActivity.java",
		"/home/ken/GeekLofter/Cache_FIFO/Makefile",
		"/home/ken/GeekLofter/StringUtls/StringUtils.cpp",
		"/home/ken/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/ken/.config/sublime-text-3/Packages/C++ Snippets/reference.md",
		"/home/ken/GeekLofter/StringUtls/StringUtils.h"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"()",
			"while",
			"}"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 500,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Makefile Improved/Makefile Improved.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CountId.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 944,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test.xml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 234,
						"regions":
						{
						},
						"selection":
						[
							[
								84,
								84
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/XML/XML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "CountIds",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 946482,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ThirdLib/tinyxml/tinyxml.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64834,
						"regions":
						{
						},
						"selection":
						[
							[
								22098,
								22098
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10329.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "CountId.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2415,
						"regions":
						{
						},
						"selection":
						[
							[
								1715,
								1715
							]
						],
						"settings":
						{
							"rulers":
							[
								80
							],
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1157,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ThirdLib/tinyxml/tinystr.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2507,
						"regions":
						{
						},
						"selection":
						[
							[
								1172,
								1172
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 130.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 130.0
	},
	"project": "CountId.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"CountId.hpp"
			],
			[
				"cound",
				"CountId.hpp"
			],
			[
				"makef",
				"Makefile"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"con",
				"CountId.cpp"
			],
			[
				"tiny",
				"ThirdLib/tinyxml/tinyxml.h"
			],
			[
				"co",
				"CountId.hpp"
			],
			[
				"u",
				"untitled"
			],
			[
				"make",
				"GeekLofter/Cache_FIFO/Makefile"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 181.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
